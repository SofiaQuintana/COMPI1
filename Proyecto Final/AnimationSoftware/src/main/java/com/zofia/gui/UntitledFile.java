/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zofia.gui;

import java.util.List;
import java.awt.event.KeyEvent;
import java.util.ArrayList;

/**
 *
 * @author zofia
 */
public class UntitledFile extends javax.swing.JPanel {
    private List<Integer> numberCounting;
    private boolean saved;
    private int type;
    /**
     * Creates new form File
     * @param type
     * @param saved
     */
    public UntitledFile(int type, boolean saved) {
        initComponents();
        this.numberCounting = new ArrayList<>();
        this.numberCounting.add(0);
        printNumbers();
        this.type = type;
        this.saved = saved;
    }
    
    public UntitledFile(int type, boolean saved, String content) {
        initComponents();
        this.numberCounting = new ArrayList<>();
        printNumbers();
        this.type = type;
        this.saved = saved;
        setContent(content);
        setNumbers();
    }
    
    private void setContent(String content) {
        this.principalTextArea.setText(content);
    }
    
    private void setNumbers() {
        int size = principalTextArea.getLineCount();
        for (int i = 0; i < size; i++) {
            numberCounting.add(i+1);
        }
        printNumbers();
    }
    
    private void printNumbers() {
        String text = "";
        for(Integer integer : numberCounting) {
            text += String.valueOf(integer) + "\n";
        }
        this.numbersTextArea.setText(text);
    }

    public boolean isSaved() {
        return saved;
    }

    public void setSaved(boolean saved) {
        this.saved = saved;
    }
    
    public String getAreaContent() {
        return principalTextArea.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        principalScroll = new javax.swing.JScrollPane();
        principalTextArea = new javax.swing.JTextArea();
        numbersTextArea = new javax.swing.JTextArea();

        principalScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        principalTextArea.setColumns(20);
        principalTextArea.setRows(5);
        principalTextArea.setBorder(null);
        principalTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                principalTextAreaKeyPressed(evt);
            }
        });
        principalScroll.setViewportView(principalTextArea);

        numbersTextArea.setColumns(20);
        numbersTextArea.setRows(5);
        numbersTextArea.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(numbersTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(principalScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 1056, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(principalScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numbersTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void principalTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_principalTextAreaKeyPressed
        // TODO add your handling code here:
        int actualLine = principalTextArea.getLineCount();
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if((numberCounting.size()-1) < actualLine) {
                numberCounting.add(actualLine);
                printNumbers();
            }
        } 
    }//GEN-LAST:event_principalTextAreaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea numbersTextArea;
    private javax.swing.JScrollPane principalScroll;
    private javax.swing.JTextArea principalTextArea;
    // End of variables declaration//GEN-END:variables
}
